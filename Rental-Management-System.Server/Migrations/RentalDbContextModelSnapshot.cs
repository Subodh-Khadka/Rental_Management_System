// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Rental_Management_System.Server.Data;

#nullable disable

namespace Rental_Management_System.Server.Migrations
{
    [DbContext(typeof(RentalDbContext))]
    partial class RentalDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Rental_Management_System.Server.Models.MonthlyCharge", b =>
                {
                    b.Property<Guid>("MonthlyChargeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ChargeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("RentPaymentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Units")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("MonthlyChargeId");

                    b.HasIndex("RentPaymentId");

                    b.ToTable("MonthlyCharges");
                });

            modelBuilder.Entity("Rental_Management_System.Server.Models.PaymentTransaction", b =>
                {
                    b.Property<Guid>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("AmountPaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RentPaymentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TransactionId");

                    b.HasIndex("RentPaymentId");

                    b.ToTable("PaymentTransactions");
                });

            modelBuilder.Entity("Rental_Management_System.Server.Models.RentPayment", b =>
                {
                    b.Property<Guid>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("PaidAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("PaymentMonth")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RentalContractId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("RoomPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PaymentId");

                    b.HasIndex("RentalContractId");

                    b.HasIndex("RoomId");

                    b.HasIndex("TenantId");

                    b.ToTable("RentPayments");
                });

            modelBuilder.Entity("Rental_Management_System.Server.Models.RentalContract", b =>
                {
                    b.Property<Guid>("RentalContractId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Terms")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RentalContractId");

                    b.HasIndex("RoomId");

                    b.HasIndex("TenantId");

                    b.ToTable("RentalContracts");
                });

            modelBuilder.Entity("Rental_Management_System.Server.Models.Room", b =>
                {
                    b.Property<Guid>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("RoomPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RoomTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoomId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("Rental_Management_System.Server.Models.Tenant", b =>
                {
                    b.Property<Guid>("TenantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAdress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TenantId");

                    b.ToTable("Tenants");
                });

            modelBuilder.Entity("Rental_Management_System.Server.Models.MonthlyCharge", b =>
                {
                    b.HasOne("Rental_Management_System.Server.Models.RentPayment", "RentPayment")
                        .WithMany("MonthlyCharges")
                        .HasForeignKey("RentPaymentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RentPayment");
                });

            modelBuilder.Entity("Rental_Management_System.Server.Models.PaymentTransaction", b =>
                {
                    b.HasOne("Rental_Management_System.Server.Models.RentPayment", "RentPayment")
                        .WithMany()
                        .HasForeignKey("RentPaymentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RentPayment");
                });

            modelBuilder.Entity("Rental_Management_System.Server.Models.RentPayment", b =>
                {
                    b.HasOne("Rental_Management_System.Server.Models.RentalContract", "RentalContract")
                        .WithMany("Payments")
                        .HasForeignKey("RentalContractId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Rental_Management_System.Server.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Rental_Management_System.Server.Models.Tenant", null)
                        .WithMany("Payments")
                        .HasForeignKey("TenantId");

                    b.Navigation("RentalContract");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Rental_Management_System.Server.Models.RentalContract", b =>
                {
                    b.HasOne("Rental_Management_System.Server.Models.Room", "Room")
                        .WithMany("RentalContracts")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rental_Management_System.Server.Models.Tenant", "Tenant")
                        .WithMany("RentalContracts")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("Rental_Management_System.Server.Models.RentPayment", b =>
                {
                    b.Navigation("MonthlyCharges");
                });

            modelBuilder.Entity("Rental_Management_System.Server.Models.RentalContract", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("Rental_Management_System.Server.Models.Room", b =>
                {
                    b.Navigation("RentalContracts");
                });

            modelBuilder.Entity("Rental_Management_System.Server.Models.Tenant", b =>
                {
                    b.Navigation("Payments");

                    b.Navigation("RentalContracts");
                });
#pragma warning restore 612, 618
        }
    }
}
